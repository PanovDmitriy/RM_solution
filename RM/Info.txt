State:

Entry Action - Действие при входе в состояние.
Exit Action - Действие при выходе из состония.
1. Может быть синхронным или асинхронным (т.е. отложить/заморозить все действия с состонияем до завершения действия - синхронное; или инициировать действия, которое будет происходить параллельно с возможным изменением состояния - асинхронное)
2. не может быть прервано событием (т.е. действие будет выполнено вне зависимости от изменения состояния)

Internal Action - Дейсвие внутри состония.
1. Начинается сразу после Entry Action
2. Всегда асинхронное (т.е. дейсвие в Internal Action не влияет на возможность изменения состояния)
3. Может быть прервано событием (событие инициирующее выход из состония)

--------------------------------------

Pseudostate:
Без всех Actions.

------------------------

transition: source state (исходное состояние), trigger (переключающее событие), guard condition, target state (целевое состояние)
trigger (переключающее событие)

pseudostate (псевдосостояние): history state; initial state; junction state; stub state.

-----------------------------

internal transition (внутренний переход) 
Обрабатывает событие, но не изменяет состояние (в том числе, не вызывает entry / exit actions)
Отсутствует в принцепе, т.к. это упрощение композитного сосотояния, т.е. параллельного автомата.

---------------------------------

timeout event | transition

-------------------------------------

в общем смысле, имя Состояния (оно должно быть уникальным в системе) - это адрес объекта state. Т.е. имя состояния в нотации - это указатель на на объект состояния в программировании.
Именно поэтому обращение к Состояниям через указатели, т.е. через имена (?)
с другой стороны, адрес - это имя конкретного экземпляра. Нужно ли имя типа?
В этом разница с событием - там нет имени экземпляра, там есть имя типа.
Вовремя и правильно различай тип, переменную типа и значение переменной!

-------------------------

https://openu.ru/Books/UML/state.asp - литератра
https://studopedia.net/4_36239_psevdosostoyanie-pseudo-state---vershina-v-konechnom-avtomate-kotoraya-imeet-formu-sostoyaniya-no-ne-obladaet-povedeniem.html - новое

---------------------------

initial state:
псевдосостояние.
Только 1 в автомате, но из него множество переходов (обычные переходы) к разным состояниям - выбор конкретного обпределяется локальным событием

---------------------

До срабатывания перехода объект находится в предыдущем от него состоянии, называемым исходным, или в источнике (не путать с начальным состоянием - это разные понятия), а после его срабатывания объект находится в последующем от него состоянии (целевом состоянии).
source - target

-------------------------

все состояния - это simple state, не может быть composite state, т.к. это упрощение прарллельных автоматов

-------------------------------

нетригеррный переход - переход по завешению
Отсутствует. т.к. по завершению генерируется локальное событие, которое переводит автомат в новой состояние. В том числе и из inital state в другое состояние

-------------------------------------

все события делятся на global_event и local_event

local_event - события, которые вырабатываются самим состояниям только для самого себя (своего автомата).
Они не передаются другим автоматам!

change event - События такого рода подразумевают постоянную проверку условия. Событие происходит тогда, когда условие становится истинным (в т.ч. автоматический переход к другому состоянию - вырабатывается самим состоянием)
time event - наступление абсолютного времени или истечение определенного промежутка времени после того, как объект вошел в данное состояние

--------------------------------------

event_end_of_time : // нужно ли такое событие как предопределённое, если оно может быть и локальным и глобальным, иметь или не иметь параметры времени или другие параметры ?

----------------------------------------

реализован принцип: одно initial state и множество переходов от него к разым состояниям, т.е. выбор куда переход из инитиал стэйт определяется событием, а событие определяется как параметр вызова set_enabled_status для автомата
т.е. из initial state нет перехода по умолчанию - всё переходы по событию, а событие выбирается при включении автомата
если нужен переход "по завешению", то вызывай событие явно в конце активности
отсюда вывод: нет никаких предопределённых событий - все события определяются пользователем. Нет забронированных идентификаторов.

--------------------------

CRTP (https://www.youtube.com/watch?v=SsIJTyM3rg8)
SFINAE
std::unique_ptr
std::shared_ptr
std::auto_ptr
std::weak_ptr

std::invoke
std::bind
optional
variant
any

https://ravesli.com/urok-193-std-unique_ptr/

https://habr.com/ru/post/188010/
https://habr.com/ru/post/196560/
https://habr.com/ru/post/195482/
https://habr.com/ru/post/195996/
https://habr.com/ru/post/196226/
https://habr.com/ru/post/104219/
https://www.youtube.com/watch?v=SEvR78OhGtw

многопоточность:
https://habr.com/ru/post/443406/
https://habr.com/ru/post/444464/



